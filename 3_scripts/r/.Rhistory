di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
library(xlsx)
library(rgdal)
# Cargo una funcion especifica que me reordena el dataframe como yo quiero
reordena <- function(data, x, y){
columnas <- names(data) # Obtengo nombre de columnas
n <- length(columnas) # numero de columnas
numeros <- seq(from=1, to=n, by=1) # numeros de 1 hasta n
pos.X <- match(x,columnas) # posici?n de la columna x
pos.Y <- match(y,columnas) # poisicion de la columna y
resto <- numeros[!numeros %in% c(pos.X, pos.Y)] # resto de posiciones
datos.ordenados <- data[c(pos.X, pos.Y,resto)] # ordenar por posiciones
print(datos.ordenados)}
coord <- read.xlsx(file=paste(di,'/2_diccionarios/spatial_coverage/dicc_parcelas_gbif.xlsx', sep=''), 1)
coord$UTM_X <- round(coord$UTM_X, 0)
coord$UTM_Y <- round(coord$UTM_Y, 0)
head(coord)
datos <- reordena(coord, x='UTM_X', y='UTM_Y')
datos$UTM_X <- as.numeric(datos$UTM_X)
datos$UTM_Y <- as.numeric(datos$UTM_Y)
## CONVIERTO EN OBJETO SPATIAL
SP <- SpatialPoints(cbind(datos$UTM_X,datos$UTM_Y),
proj4string=CRS("+proj=utm +zone=30"))
# Convierto objeto a longitud+latitud
converso <- as.data.frame(spTransform(SP, CRS("+proj=longlat")))
datos.convertidos <- cbind(datos, converso)
# renombro
names(datos.convertidos)[5] <- 'long'
names(datos.convertidos)[6] <- 'lat'
View(datos.convertidos)
getwd()
require(knitr)
require(rmarkdown)
rmarkdown::render('gbif_borreguiles_001_coordenadas.Rmd', 'all')
library('lubridate')
library('reshape2')
# Set working directory
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
# read file
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
# Extract year
mydata$date <- as.Date(mydata$FECHA, "%d/%m/%Y")
mydata$year <- year(mydata$date)
# Aggregate by year and taxon. Number of records by taxon and year
aux <- aggregate(mydata$TAXON, by=list(mydata$TAXON, mydata$year),FUN='length')
names(aux) <- c('TAXON', 'year', 'count')
aux2 <- dcast(aux, TAXON ~ year , value.var = 'count' )
mydata$date <- as.Date(mydata$FECHA, "%d/%m/%Y")
mydata$year <- year(mydata$date)
names(mydata)
aux <- aggregate(mydata$TAXON, by=list(mydata$TAXON, mydata$year),FUN='length')
head(mydata)
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
# read file
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
View(mydata)
mydata$date <- as.Date(mydata$FECHA, "%d/%m/%Y")
mydata$year <- year(mydata$date)
# Aggregate by year and taxon. Number of records by taxon and year
aux <- aggregate(mydata$TAXON, by=list(mydata$TAXON, mydata$year),FUN='length')
names(aux) <- c('TAXON', 'year', 'count')
aux2 <- dcast(aux, TAXON ~ year , value.var = 'count' )
View(aux)
View(aux2)
aux2[is.na(aux2)] <- 0
View(aux2)
aux2 <- dcast(aux, TAXON ~ year , value.var = 'count' )
aux2[is.na(aux2)] <- ''
View(aux2)
View(aux)
