p <- ggplot() + geom_polygon(data=wm, aes(x=long, y=lat, group=group), fill=micolor)
p1 <- p + geom_point(data=mycities,aes(x=long, y=lat, size=factor(count), shape=center, color=center)) +
scale_shape_manual(name='Center', values=c(15,16))+
scale_size_manual(values=c(3,4,5), guide=FALSE)+
scale_colour_manual(name='Center', values=c(color.nceas,color.renci))+
theme_bw() + theme(panel.grid.major=element_blank(),
panel.grid.minor.y = element_blank(),
legend.key.size = unit(2, "cm"))
p1
p <- ggplot() + geom_polygon(data=wm, aes(x=long, y=lat, group=group), fill=micolor)
p1 <- p + geom_point(data=mycities,aes(x=long, y=lat, size=factor(count), shape=center, color=center)) +
scale_shape_manual(name='Center', values=c(15,16))+
scale_size_manual(values=c(3,4,5), guide=FALSE)+
scale_colour_manual(name='Center', values=c(color.nceas,color.renci))+
theme_bw() + theme(panel.grid.major=element_blank(),
panel.grid.minor.y = element_blank(),
legend.key.size = unit(10, "cm"))
p1
# load library
library('ggmap')
library('ggplot2')
library('grid')
p <- ggplot() + geom_polygon(data=wm, aes(x=long, y=lat, group=group), fill=micolor)
p1 <- p + geom_point(data=mycities,aes(x=long, y=lat, size=factor(count), shape=center, color=center)) +
scale_shape_manual(name='Center', values=c(15,16))+
scale_size_manual(values=c(3,4,5), guide=FALSE)+
scale_colour_manual(name='Center', values=c(color.nceas,color.renci))+
theme_bw() + theme(panel.grid.major=element_blank(),
panel.grid.minor.y = element_blank(),
legend.key.size = unit(10, "cm"))
p1
p <- ggplot() + geom_polygon(data=wm, aes(x=long, y=lat, group=group), fill=micolor)
p1 <- p + geom_point(data=mycities,aes(x=long, y=lat, size=factor(count), shape=center, color=center)) +
scale_shape_manual(name='Center', values=c(15,16))+
scale_size_manual(values=c(3,4,5), guide=FALSE)+
scale_colour_manual(name='Center', values=c(color.nceas,color.renci))+
theme_bw() + theme(panel.grid.major=element_blank(),
panel.grid.minor.y = element_blank(),
legend.key.size = unit(2, "cm"))
p1
p <- ggplot() + geom_polygon(data=wm, aes(x=long, y=lat, group=group), fill=micolor)
p1 <- p + geom_point(data=mycities,aes(x=long, y=lat, size=factor(count), shape=center, color=center)) +
scale_shape_manual(name='Center', values=c(15,16))+
scale_size_manual(values=c(3,4,5), guide=FALSE)+
scale_colour_manual(name='Center', values=c(color.nceas,color.renci))+
theme_bw() + theme(panel.grid.major=element_blank(),
panel.grid.minor.y = element_blank(),
legend.key.size = unit(1.5, "cm"))
p1
p <- ggplot() + geom_polygon(data=wm, aes(x=long, y=lat, group=group), fill=micolor)
p1 <- p + geom_point(data=mycities,aes(x=long, y=lat, size=factor(count), shape=center, color=center)) +
scale_shape_manual(name='Center', values=c(15,16))+
scale_size_manual(values=c(3,4,5), guide=FALSE)+
scale_colour_manual(name='Center', values=c(color.nceas,color.renci))+
theme_bw() + theme(panel.grid.major=element_blank(),
panel.grid.minor.y = element_blank(),
legend.key.size = unit(1.5, "cm"))+
guides(colour = guide_legend(override.aes = list(size=10)))
p1
p <- ggplot() + geom_polygon(data=wm, aes(x=long, y=lat, group=group), fill=micolor)
p1 <- p + geom_point(data=mycities,aes(x=long, y=lat, size=factor(count), shape=center, color=center)) +
scale_shape_manual(name='Center', values=c(15,16))+
scale_size_manual(values=c(3,4,5), guide=FALSE)+
scale_colour_manual(name='Center', values=c(color.nceas,color.renci))+
theme_bw() + theme(panel.grid.major=element_blank(),
panel.grid.minor.y = element_blank(),
legend.key.size = unit(1.5, "cm"))+
guides(colour = guide_legend(override.aes = list(size=5)))
p1
p <- ggplot() + geom_polygon(data=wm, aes(x=long, y=lat, group=group), fill=micolor)
p1 <- p + geom_point(data=mycities,aes(x=long, y=lat, size=factor(count), shape=center, color=center)) +
scale_shape_manual(name='Center', values=c(15,16))+
scale_size_manual(values=c(3,4,5), guide=FALSE)+
scale_colour_manual(name='Center', values=c(color.nceas,color.renci))+
theme_bw() + theme(panel.grid.major=element_blank(),
panel.grid.minor.y = element_blank(),
legend.key.size = unit(1.5, "cm"),
legend.key=element_blank())+
guides(colour = guide_legend(override.aes = list(size=5))) # To increase the size of points in legend
p1
p <- ggplot() + geom_polygon(data=wm, aes(x=long, y=lat, group=group), fill=micolor)
p1 <- p + geom_point(data=mycities,aes(x=long, y=lat, size=factor(count), shape=center, color=center)) +
scale_shape_manual(name='Center', values=c(15,16))+
scale_size_manual(values=c(3,4,5), guide=FALSE)+
scale_colour_manual(name='Center', values=c(color.nceas,color.renci))+
theme_bw() + theme(panel.grid.major=element_blank(),
panel.grid.minor.y = element_blank(),
legend.key.size = unit(1.2, "cm"),
legend.key=element_blank())+
guides(colour = guide_legend(override.aes = list(size=3))) # To increase the size of points in legend
p1
p <- ggplot() + geom_polygon(data=wm, aes(x=long, y=lat, group=group), fill=micolor)
p1 <- p + geom_point(data=mycities,aes(x=long, y=lat, size=factor(count), shape=center, color=center)) +
scale_shape_manual(name='Center', values=c(15,16))+
scale_size_manual(values=c(3,4,5), guide=FALSE)+
scale_colour_manual(name='Center', values=c(color.nceas,color.renci))+
theme_bw() + theme(panel.grid.major=element_blank(),
panel.grid.minor.y = element_blank(),
legend.key.size = unit(1.2, "cm"),
legend.key=element_blank())+
guides(colour = guide_legend(override.aes = list(size=5))) # To increase the size of points in legend
p1
4550/91
library(rgif)
library(rgbif)
citation('rgbif')
library(taxize)
taxize
library(taxize)
install.packages(taxize)
install.packages("taxize")
library("taxize")
citation("taxize")
urlfile <- url('http://www.iecolab.es/datasets/quality_andalusia.csv')
mydata <- read.csv(urlfile, header=T, sep=',')
cor(mydata)
str(mydata)
cor(mydata[,c(12:13)])
plot(mydata$unemployed~mydata$employed)
plot(mydata$unemployed,mydata$employed)
abline(lm(mydata$unemployed,mydata$employed))
abline(lm(mydata$unemployed~mydata$employed))
max(mydata$employed)
# Prepare data
# // 1  Change the effects of some variables
mydata$migration <- mydata$migration * (-1)
mydata$unemployed <- mydata$unemployed * (-1)
mydata$age_index <- mydata$age_index * (-1)
entities <- mydata[,3]
row.names(mydata) <- entities
# // 3  Select only the variables that we want to use to compute dp2
myindicators <- mydata[,c(4:25)]
# -----------------------------------------------------------
# -----------------------------------------------------------
# Compute the reference base vector. We use the makeReferenceVector (see p2distnace documentation)
minRV <- makeReferenceVector(X=myindicators, reference_vector_function = min)
library(p2distance)
minRV <- makeReferenceVector(X=myindicators, reference_vector_function = min)
library(p2distance)
minRV <- makeReferenceVector(X=myindicators, reference_vector_function = min)
ind <- p2distance(matriz=as.matrix(myindicators), reference_vector = minRV, iterations = 50)
head(ind$p2distance)
head(ind$p2distance)
res <- ind$p2distance
res$cod <- row.names(res)
res <- as.data.frame(ind$p2distance)
res$cod <- row.names(res)
View(res)
res$muni <- substr(res$cod, 1,4)
View(res)
res <- data.frame(p2d=ind$p2distance,
year=substr(row.names(ind$p2distance),1,4),
muni=substr(row.names(ind$p2distance),4,9))
View(res)
res <- data.frame(p2d=ind$p2distance,
year=substr(row.names(ind$p2distance),1,4),
muni=substr(row.names(ind$p2distance),5,9))
View(res)
res <- data.frame(p2d=ind$p2distance,
year=substr(row.names(ind$p2distance),1,4),
muni=substr(row.names(ind$p2distance),5,9))
getwd()
setwd("/Users/ajpelu/")
write.csv(res, file="out_p2distance.csv", row.names=TRUE)
urlfile <- url('http://www.iecolab.es/datasets/quality_andalusia.csv')
mydata <- read.csv(urlfile, header=T, sep=',')
1498/2
urlfile <- url('http://www.iecolab.es/datasets/quality_andalusia.csv')
mydata <- read.csv(urlfile, header=T, sep=',')
cor(mydata[,c(12:13)])
str(mydata)
my89 <- mydata[mydata$year==1989,]
my09 <- mydata[mydata$year==2009,]
cor(my89[,c(12:13)])
cor(my09[,c(12:13)])
cor(mydata[,c(12:13)])
par(mfrow=c(1,2))plot(my89$unemployed,my89$employed)abline(lm(my89$unemployed~my89$employed))plot(my09$unemployed,my09$employed)abline(lm(my09$unemployed~my09$employed))
par(mfrow=c(1,2))
plot(my89$unemployed,my89$employed)abline(lm(my89$unemployed~my89$employed))plot(my09$unemployed,my09$employed)abline(lm(my09$unemployed~my09$employed))
plot(my89$unemployed,my89$employed)
abline(lm(my89$unemployed~my89$employed))
plot(my09$unemployed,my09$employed)
abline(lm(my09$unemployed~my09$employed))
library(ggplot2)
p <- qplot(employed, unemployed, data=my89)
p + geom_line()
p + geom_abline()
coef(lm(employed ~ unemployed, data = my89))
p + geom_abline(intercept=30.78, slope=-0.032)
lm(employed ~ unemployed, data = my89)
summary(lm(employed ~ unemployed, data = my89))
par(mfrow=c(1,2))plot(my89$unemployed,my89$employed)abline(lm(my89$unemployed~my89$employed))plot(my09$unemployed,my09$employed)abline(lm(my09$unemployed~my09$employed))
par(mfrow=c(1,2))
plot(my89$unemployed,my89$employed)
abline(lm(my89$unemployed~my89$employed))
plot(my09$unemployed,my09$employed)
abline(lm(my09$unemployed~my09$employed))
p + stat_smooth(method='lm')
urlfile <- url('http://www.iecolab.es/datasets/quality_andalusia.csv')
library('p2distance') # To compute P2 Distance
head(mydata)
names(mydata) # view variables names
# If we want to examine the values of the variable schools, we type
head(mydata["schools"])
mydata <- read.csv(urlfile, header=T, sep=',')
head(mydata)
names(mydata) # view variables names
head(mydata["schools"])
mydata$migration <- mydata$migration * (-1)
mydata$unemployed <- mydata$unemployed * (-1)
mydata$age_index <- mydata$age_index * (-1)
entities <- mydata[,3]
row.names(mydata) <- entities
myindicators <- mydata[,c(4:25)]
minRV <- makeReferenceVector(X=myindicators, reference_vector_function = min)
ind <- p2distance(matriz=as.matrix(myindicators), reference_vector = minRV, iterations = 50)
getwd()
head(ind$p2distance)
write.csv(ind$p2distance, file="out_p2distance.csv", row.names=TRUE)
df <- data.frame(entity=as.numeric(rownames(ind$p2distance)), p2d= ind$p2distance)
df <- join(df, mydata[,c('cod','year','entity')], by='entity')
library('plyr')
df <- data.frame(entity=as.numeric(rownames(ind$p2distance)), p2d= ind$p2distance)
df <- join(df, mydata[,c('cod','year','entity')], by='entity')
df$Codigo <- sprintf("%05d",df$cod)
names(df)[2] <- 'dp2'
df <- df[,c('Codigo','year','dp2')]
View(df)
dp2.89 <- df[df$year==1989,]
names(dp2.89)[3] <- 'dp2_89'
dp2.09 <- df[df$year==2009,]
names(dp2.09)[3] <- 'dp2_09'
# Create dataframe with difference
dif <- join(dp2.89, dp2.09, by='Codigo')
dif$dif <- dif$dp2_09 - dif$dp2_89
summarySE(df, measurevar='dp2', groupvars = 'year')
library('devtools')
source_url('https://raw.githubusercontent.com/ajpelu/ajpeluR/master/R/summarySE.R') # Summary function
summarySE(df, measurevar='dp2', groupvars = 'year')
str(dp2.89)
min(dp2.89$dp2_89)
max(dp2.89$dp2_89) - min(dp2.89$dp2_89)
max(dp2.09$dp2_09) - min(dp2.09$dp2_09)
co.var <- function(x) ( 100*sd(x)/mean(x) )
co.var(dp2.09$dp2_09)
co.var(dp2.89$dp2_89)
(co.var(dp2.09$dp2_09))/100
View(dif)
max(dif$dif)
order(dif[,6], decreasing = T)
ddd <- dif[order(-dif) , ]
ddd <- dif[order(dif) , ]
View(ddd)
attach(dif)
ddd <- dif[order(dif),]
View(ddd)
ddd <- dif[order(dif$dif),]
View(ddd)
ddd <- dif[order(-dif$dif),]
View(ddd)
ddd <- dif[order(dif$dif),]
View(ddd)
getwd()
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP/'
mi <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt'), sep=''), header=TRUE, sep='\t')
mi <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
head(mi)
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
remove(mi)
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
str(mydata)
names(mydata)
mydata$date <- as.Date(mydata$FECHA)
mydata$year <- as.numeric(format(date, "%Y"))
install.packages("lubridate")
library('lubridate')
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
mydata$date <- as.Date(mydata$FECHA)
mydata$year <- year(mydata$date)
head(mydata)
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
mydata$year <- year(mydata$FECHA)
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
mydata$year <- year(mydata$FECHA)
head(mydata)
mydata$date <- as.Date(mydata$FECHA, "%d.%m.%Y")
mydata$year <- year(mydata$date)
head(mydata)
?as.date
?as.Date
mydata$date <- as.Date(mydata$FECHA, "%d/%m/%Y")
mydata$year <- year(mydata$date)
head(mydata)
?aggregate
x <- aggregate(mydata$TAXON, by=list(mydata$year),FUN='length')
View(x)
x <- aggregate(mydata$TAXON, by=list(mydata$TAXON, mydata$year),FUN='length')
View(x)
aux <- aggregate(mydata$TAXON, by=list(mydata$TAXON, mydata$year),FUN='length')
View(aux)
names(aux) <- c('TAXON', 'year', 'count')
library('reshape2')
aux2 <- dcast(aux, TAXON ~ year , value_var = 'count' )
aux2 <- dcast(aux, TAXON ~ year , value.var = 'count' )
View(aux2)
write.table(aux2, file=paste(di, '/2_diccionarios/taxones_year.txt', sep=''), header=TRUE, row.names=FALSE)
write.table(aux2, file=paste(di, '/2_diccionarios/taxones_year.txt', sep=''), row.names=FALSE)
write.csv(aux2, file=paste(di, '/2_diccionarios/taxones_year.csv', sep=''), row.names=FALSE)
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
taxones <- read.table(file=paste(di,'2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep=';')
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep=';')
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep='\t')
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep=',')
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep='\t')
View(taxones)
urfile1 <- url('https://ide.ugr.es/owncloud/public.php?service=files&t=b6fef0b03c01b8eaa78e657c48422f8d&download')
mydata <- read.csv(urlfile, header=T, sep=';')
mydata <- read.csv(urlfile1, header=T, sep=';')
urlfile1 <- url('https://ide.ugr.es/owncloud/public.php?service=files&t=b6fef0b03c01b8eaa78e657c48422f8d&download')
mydata <- read.csv(urlfile1, header=T, sep=';')
urlfile <- url('http://www.iecolab.es/datasets/quality_andalusia.csv')
mydata <- read.csv(urlfile, header=T, sep=',')
View(mydata)
library('rmarkdown')
library('knitr')
setwd('/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP/3_scripts/r/')
rmarkdown::render('gbif_borreguiles_005_cov_taxonomica.Rmd', 'all')
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
library('ggplot2')
library('plyr')
fam <- read.table(file=paste(di, '/2_diccionarios/cov_taxonomica/covtax_family.txt', sep=''), header=TRUE, sep=';')
View(fam)
View(fam)
names(fam) <- c("Family","n","Order","Class")
View(fam)
fam$per <- round((fam$n / fam$tot)*100, 2)
names(fam) <- c("Family","n","Order","Class")
# compute total
fam$tot <- sum(fam$n)
# conpute percentage
fam$per <- round((fam$n / fam$tot)*100, 2)
View(fam)
names(fam)ç
names(fam)
f <- ggplot(fam, aes(x=reorder(fam, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') + coord_flip() +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(fam, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') + coord_flip() +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
names(fam)
head(fam)
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') + coord_flip() +
geom_text(fam, aes(x=reorder(Family, per), y=per, label=n),vjust=0) +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') + coord_flip() +
geom_text(aes(x=reorder(Family, per), y=per, label=n),vjust=0) +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') + coord_flip() +
geom_text(aes(x=reorder(Family, per), y=per, label=n),vjust=0.5) +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') + coord_flip() +
geom_text(aes(x=reorder(Family, per), y=per, label=n),vjust=0.5) +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, hjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') +
geom_text(aes(x=reorder(Family, per), y=per, label=n),hjust=0.1) +
coord_flip() +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') +
geom_text(aes(x=reorder(Family, per), y=per, label=n),hjust=0.5) +
coord_flip() +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') +
geom_text(aes(x=reorder(Family, per), y=per, label=n),hjust=-0.5) +
coord_flip() +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') +
geom_text(aes(x=reorder(Family, per), y=per, label=n),vjust=-0.5) +
coord_flip() +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') +
geom_text(aes(x=reorder(Family, per), y=per, label=n),vjust=0.5) +
coord_flip() +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') +
geom_text(aes(x=reorder(Family, per), y=per, label=n),vjust=0.5,hjus=-.9) +
coord_flip() +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') +
geom_text(aes(x=reorder(Family, per), y=per, label=n),vjust=0.5,hjust=0.9) +
coord_flip() +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') +
geom_text(aes(x=reorder(Family, per), y=per, label=n),vjust=0.5,hjust=-0.9) +
coord_flip() +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') +
geom_text(aes(x=reorder(Family, per), y=per, label=n),vjust=0.5,hjust=-0.5) +
coord_flip() +
theme_bw() +
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
# load library
library('ggplot2')
library('plyr')
library('devtools')
source_url('https://raw.githubusercontent.com/ajpelu/ajpeluR/master/R/exportggplot.R')
ExportPlot(f, filename=paste(di, '8_figures/taxonomicCoverage/familiaCov',sep=''),
width=8, height=6)
ExportPlot(f, filename=paste(di, '/8_figures/taxonomicCoverage/familiaCov',sep=''),
width=8, height=6)
library('rmarkdown')
library('knitr')
setwd('/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP/3_scripts/r/')
rmarkdown::render('gbif_borreguiles_003_plot_family.Rmd', 'all')
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') +
geom_text(aes(x=reorder(Family, per), y=per, label=n),vjust=0.5,hjust=-0.5) +
coord_flip() +
theme_bw() + ylim(0,30)+
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
f <- ggplot(fam, aes(x=reorder(Family, per), y=per)) +
geom_bar(stat = "identity", fill='#43a2ca') +
geom_text(aes(x=reorder(Family, per), y=per, label=n),vjust=0.5,hjust=-0.5) +
coord_flip() +
theme_bw() + ylim(0,25)+
theme(panel.border = element_blank(),
axis.ticks = element_blank(), axis.text.y = element_text(angle=0, vjust=0.5, size=13)) +
ylab('% records') + xlab('Family')
f
setwd('/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP/3_scripts/r/')
rmarkdown::render('gbif_borreguiles_003_plot_family.Rmd', 'all')
