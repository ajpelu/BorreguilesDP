guides(colour = guide_legend(override.aes = list(size=3))) # To increase the size of points in legend
p1
p <- ggplot() + geom_polygon(data=wm, aes(x=long, y=lat, group=group), fill=micolor)
p1 <- p + geom_point(data=mycities,aes(x=long, y=lat, size=factor(count), shape=center, color=center)) +
scale_shape_manual(name='Center', values=c(15,16))+
scale_size_manual(values=c(3,4,5), guide=FALSE)+
scale_colour_manual(name='Center', values=c(color.nceas,color.renci))+
theme_bw() + theme(panel.grid.major=element_blank(),
panel.grid.minor.y = element_blank(),
legend.key.size = unit(1.2, "cm"),
legend.key=element_blank())+
guides(colour = guide_legend(override.aes = list(size=5))) # To increase the size of points in legend
p1
4550/91
library(rgif)
library(rgbif)
citation('rgbif')
library(taxize)
taxize
library(taxize)
install.packages(taxize)
install.packages("taxize")
library("taxize")
citation("taxize")
urlfile <- url('http://www.iecolab.es/datasets/quality_andalusia.csv')
mydata <- read.csv(urlfile, header=T, sep=',')
cor(mydata)
str(mydata)
cor(mydata[,c(12:13)])
plot(mydata$unemployed~mydata$employed)
plot(mydata$unemployed,mydata$employed)
abline(lm(mydata$unemployed,mydata$employed))
abline(lm(mydata$unemployed~mydata$employed))
max(mydata$employed)
# Prepare data
# // 1  Change the effects of some variables
mydata$migration <- mydata$migration * (-1)
mydata$unemployed <- mydata$unemployed * (-1)
mydata$age_index <- mydata$age_index * (-1)
entities <- mydata[,3]
row.names(mydata) <- entities
# // 3  Select only the variables that we want to use to compute dp2
myindicators <- mydata[,c(4:25)]
# -----------------------------------------------------------
# -----------------------------------------------------------
# Compute the reference base vector. We use the makeReferenceVector (see p2distnace documentation)
minRV <- makeReferenceVector(X=myindicators, reference_vector_function = min)
library(p2distance)
minRV <- makeReferenceVector(X=myindicators, reference_vector_function = min)
library(p2distance)
minRV <- makeReferenceVector(X=myindicators, reference_vector_function = min)
ind <- p2distance(matriz=as.matrix(myindicators), reference_vector = minRV, iterations = 50)
head(ind$p2distance)
head(ind$p2distance)
res <- ind$p2distance
res$cod <- row.names(res)
res <- as.data.frame(ind$p2distance)
res$cod <- row.names(res)
View(res)
res$muni <- substr(res$cod, 1,4)
View(res)
res <- data.frame(p2d=ind$p2distance,
year=substr(row.names(ind$p2distance),1,4),
muni=substr(row.names(ind$p2distance),4,9))
View(res)
res <- data.frame(p2d=ind$p2distance,
year=substr(row.names(ind$p2distance),1,4),
muni=substr(row.names(ind$p2distance),5,9))
View(res)
res <- data.frame(p2d=ind$p2distance,
year=substr(row.names(ind$p2distance),1,4),
muni=substr(row.names(ind$p2distance),5,9))
getwd()
setwd("/Users/ajpelu/")
write.csv(res, file="out_p2distance.csv", row.names=TRUE)
urlfile <- url('http://www.iecolab.es/datasets/quality_andalusia.csv')
mydata <- read.csv(urlfile, header=T, sep=',')
1498/2
urlfile <- url('http://www.iecolab.es/datasets/quality_andalusia.csv')
mydata <- read.csv(urlfile, header=T, sep=',')
cor(mydata[,c(12:13)])
str(mydata)
my89 <- mydata[mydata$year==1989,]
my09 <- mydata[mydata$year==2009,]
cor(my89[,c(12:13)])
cor(my09[,c(12:13)])
cor(mydata[,c(12:13)])
par(mfrow=c(1,2))plot(my89$unemployed,my89$employed)abline(lm(my89$unemployed~my89$employed))plot(my09$unemployed,my09$employed)abline(lm(my09$unemployed~my09$employed))
par(mfrow=c(1,2))
plot(my89$unemployed,my89$employed)abline(lm(my89$unemployed~my89$employed))plot(my09$unemployed,my09$employed)abline(lm(my09$unemployed~my09$employed))
plot(my89$unemployed,my89$employed)
abline(lm(my89$unemployed~my89$employed))
plot(my09$unemployed,my09$employed)
abline(lm(my09$unemployed~my09$employed))
library(ggplot2)
p <- qplot(employed, unemployed, data=my89)
p + geom_line()
p + geom_abline()
coef(lm(employed ~ unemployed, data = my89))
p + geom_abline(intercept=30.78, slope=-0.032)
lm(employed ~ unemployed, data = my89)
summary(lm(employed ~ unemployed, data = my89))
par(mfrow=c(1,2))plot(my89$unemployed,my89$employed)abline(lm(my89$unemployed~my89$employed))plot(my09$unemployed,my09$employed)abline(lm(my09$unemployed~my09$employed))
par(mfrow=c(1,2))
plot(my89$unemployed,my89$employed)
abline(lm(my89$unemployed~my89$employed))
plot(my09$unemployed,my09$employed)
abline(lm(my09$unemployed~my09$employed))
p + stat_smooth(method='lm')
urlfile <- url('http://www.iecolab.es/datasets/quality_andalusia.csv')
library('p2distance') # To compute P2 Distance
head(mydata)
names(mydata) # view variables names
# If we want to examine the values of the variable schools, we type
head(mydata["schools"])
mydata <- read.csv(urlfile, header=T, sep=',')
head(mydata)
names(mydata) # view variables names
head(mydata["schools"])
mydata$migration <- mydata$migration * (-1)
mydata$unemployed <- mydata$unemployed * (-1)
mydata$age_index <- mydata$age_index * (-1)
entities <- mydata[,3]
row.names(mydata) <- entities
myindicators <- mydata[,c(4:25)]
minRV <- makeReferenceVector(X=myindicators, reference_vector_function = min)
ind <- p2distance(matriz=as.matrix(myindicators), reference_vector = minRV, iterations = 50)
getwd()
head(ind$p2distance)
write.csv(ind$p2distance, file="out_p2distance.csv", row.names=TRUE)
df <- data.frame(entity=as.numeric(rownames(ind$p2distance)), p2d= ind$p2distance)
df <- join(df, mydata[,c('cod','year','entity')], by='entity')
library('plyr')
df <- data.frame(entity=as.numeric(rownames(ind$p2distance)), p2d= ind$p2distance)
df <- join(df, mydata[,c('cod','year','entity')], by='entity')
df$Codigo <- sprintf("%05d",df$cod)
names(df)[2] <- 'dp2'
df <- df[,c('Codigo','year','dp2')]
View(df)
dp2.89 <- df[df$year==1989,]
names(dp2.89)[3] <- 'dp2_89'
dp2.09 <- df[df$year==2009,]
names(dp2.09)[3] <- 'dp2_09'
# Create dataframe with difference
dif <- join(dp2.89, dp2.09, by='Codigo')
dif$dif <- dif$dp2_09 - dif$dp2_89
summarySE(df, measurevar='dp2', groupvars = 'year')
library('devtools')
source_url('https://raw.githubusercontent.com/ajpelu/ajpeluR/master/R/summarySE.R') # Summary function
summarySE(df, measurevar='dp2', groupvars = 'year')
str(dp2.89)
min(dp2.89$dp2_89)
max(dp2.89$dp2_89) - min(dp2.89$dp2_89)
max(dp2.09$dp2_09) - min(dp2.09$dp2_09)
co.var <- function(x) ( 100*sd(x)/mean(x) )
co.var(dp2.09$dp2_09)
co.var(dp2.89$dp2_89)
(co.var(dp2.09$dp2_09))/100
View(dif)
max(dif$dif)
order(dif[,6], decreasing = T)
ddd <- dif[order(-dif) , ]
ddd <- dif[order(dif) , ]
View(ddd)
attach(dif)
ddd <- dif[order(dif),]
View(ddd)
ddd <- dif[order(dif$dif),]
View(ddd)
ddd <- dif[order(-dif$dif),]
View(ddd)
ddd <- dif[order(dif$dif),]
View(ddd)
getwd()
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP/'
mi <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt'), sep=''), header=TRUE, sep='\t')
mi <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
head(mi)
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
remove(mi)
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
str(mydata)
names(mydata)
mydata$date <- as.Date(mydata$FECHA)
mydata$year <- as.numeric(format(date, "%Y"))
install.packages("lubridate")
library('lubridate')
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
mydata$date <- as.Date(mydata$FECHA)
mydata$year <- year(mydata$date)
head(mydata)
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
mydata$year <- year(mydata$FECHA)
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
mydata$year <- year(mydata$FECHA)
head(mydata)
mydata$date <- as.Date(mydata$FECHA, "%d.%m.%Y")
mydata$year <- year(mydata$date)
head(mydata)
?as.date
?as.Date
mydata$date <- as.Date(mydata$FECHA, "%d/%m/%Y")
mydata$year <- year(mydata$date)
head(mydata)
?aggregate
x <- aggregate(mydata$TAXON, by=list(mydata$year),FUN='length')
View(x)
x <- aggregate(mydata$TAXON, by=list(mydata$TAXON, mydata$year),FUN='length')
View(x)
aux <- aggregate(mydata$TAXON, by=list(mydata$TAXON, mydata$year),FUN='length')
View(aux)
names(aux) <- c('TAXON', 'year', 'count')
library('reshape2')
aux2 <- dcast(aux, TAXON ~ year , value_var = 'count' )
aux2 <- dcast(aux, TAXON ~ year , value.var = 'count' )
View(aux2)
write.table(aux2, file=paste(di, '/2_diccionarios/taxones_year.txt', sep=''), header=TRUE, row.names=FALSE)
write.table(aux2, file=paste(di, '/2_diccionarios/taxones_year.txt', sep=''), row.names=FALSE)
write.csv(aux2, file=paste(di, '/2_diccionarios/taxones_year.csv', sep=''), row.names=FALSE)
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
taxones <- read.table(file=paste(di,'2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep=';')
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep=';')
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep='\t')
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep=',')
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep='\t')
View(taxones)
urfile1 <- url('https://ide.ugr.es/owncloud/public.php?service=files&t=b6fef0b03c01b8eaa78e657c48422f8d&download')
mydata <- read.csv(urlfile, header=T, sep=';')
mydata <- read.csv(urlfile1, header=T, sep=';')
urlfile1 <- url('https://ide.ugr.es/owncloud/public.php?service=files&t=b6fef0b03c01b8eaa78e657c48422f8d&download')
mydata <- read.csv(urlfile1, header=T, sep=';')
urlfile <- url('http://www.iecolab.es/datasets/quality_andalusia.csv')
mydata <- read.csv(urlfile, header=T, sep=',')
View(mydata)
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep='\t')
urlfile <- url('http://iecolab.es/datasets/Species2000_IPNI_ANTHOS_Plant_Names_LSID_GBIF_2012.txt')
mydata <- read.table(urlfile, header=T, sep=',')
head(mydata)
species2000 <- read.table(urlfile, header=T, sep=';')
urlfile <- url('http://iecolab.es/datasets/Species2000_IPNI_ANTHOS_Plant_Names_LSID_GBIF_2012.txt')
species2000 <- read.table(urlfile, head=TRUE, sep=';')
rm(mydata)
taxones$genus <- rep("NA",nrow(taxones))
taxones$species<- rep("NA",nrow(taxones))
taxones$infraspecies <- rep("NA",nrow(taxones))
for (i in 1:nrow(taxones)){
taxones[i,3] <- strsplit(as.character(taxones$TAXON)," ")[[i]][1]
taxones[i,4] <- strsplit(as.character(taxones$TAXON)," ")[[i]][2]
taxones[i,5] <- strsplit(as.character(taxones$TAXON)," ")[[i]][4]}
View(taxones)
taxones[is.na(taxones)]   <- ""
View(taxones)
taxonesG <- subset(taxones, is.na(taxones$species))
taxones$genus <- rep("NA",nrow(taxones))
taxones$species<- rep("NA",nrow(taxones))
taxones$infraspecies <- rep("NA",nrow(taxones))
# Con este bucle, parto la cadena de texto "taxon" por espacios y guardo los resultados de los split en cada una de las rows del data.frame
for (i in 1:nrow(taxones)){
taxones[i,3] <- strsplit(as.character(taxones$TAXON)," ")[[i]][1]
taxones[i,4] <- strsplit(as.character(taxones$TAXON)," ")[[i]][2]
taxones[i,5] <- strsplit(as.character(taxones$TAXON)," ")[[i]][4]}
taxonesG <- subset(taxones, is.na(taxones$species))
View(taxonesG)
generos <- merge(taxonesG, species2000, by.x='genus', by.y='genus')
generos.unique <- generos[!duplicated(generos$genus),]
View(generos.unique)
generos.unique <- generos.unique[c('genus','TAXON','COD_TAXON','kingdom','phylum','class','order','family')]
View(taxonesG)
View(generos.unique)
View(taxonesG)
# Tenemos que incluir el campo de autoria de genero. Hemos buscado en IPNI
gen.autores <- data.frame(genus=c("Agrostis", "Bromus", "Carex", "Cerastium", "Epilobium",
"Eryngium", "Festuca", "Gagea", "Galium", "Gentiana", "Juncus",
"Lotus", "Luzula", "Poa", "Ranunculus", "Rumex",
"Sedum", "Trifolium", "Veronica", "Viola"),
author=c('L.','L.','L.','L.','L.',
'L.','L.','Salisb.','L.','L.','L.',
'DC.','L.','L.','L.',
'L','L.','L.','L.'))
# Tenemos que incluir el campo de autoria de genero. Hemos buscado en IPNI
gen.autores <- data.frame(genus=c("Agrostis", "Bromus", "Carex", "Cerastium", "Epilobium",
"Eryngium", "Festuca", "Gagea", "Galium", "Gentiana", "Juncus",
"Luzula", "Poa", "Ranunculus", "Rumex",
"Sedum", "Trifolium", "Veronica", "Viola"),
author=c('L.','L.','L.','L.','L.',
'L.','L.','Salisb.','L.','L.','L.',
'DC.','L.','L.','L.',
'L','L.','L.','L.'))
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
mydata <- read.table(file=paste(di, '/2_diccionarios/gbif2014_c2.txt', sep=''), header=TRUE, sep='\t')
View(mydata)
mydata$date <- as.Date(mydata$FECHA, "%d/%m/%Y")
mydata$year <- year(mydata$date)
# load library
library('lubridate')
library('reshape2')
mydata$year <- year(mydata$date)
aux <- aggregate(mydata$TAXON, by=list(mydata$TAXON, mydata$year),FUN='length')
names(aux) <- c('TAXON', 'year', 'count')
aux2 <- dcast(aux, TAXON ~ year , value.var = 'count' )
aux2[is.na(aux2)] <- ''
View(aux2)
write.csv(aux2, file=paste(di, '/2_diccionarios/taxones_year.csv', sep=''), row.names=FALSE)
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep='\t')
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep='\t')
di <- '/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP'
taxones <- read.table(file=paste(di,'/2_Diccionarios/TAXONES_GBIF2014.txt', sep=''),head=TRUE,sep='\t')
urlfile <- url('http://iecolab.es/datasets/Species2000_IPNI_ANTHOS_Plant_Names_LSID_GBIF_2012.txt')
species2000 <- read.table(urlfile, head=TRUE, sep=';')
taxones$genus <- rep("NA",nrow(taxones))
taxones$species<- rep("NA",nrow(taxones))
taxones$infraspecies <- rep("NA",nrow(taxones))
# Con este bucle, parto la cadena de texto "taxon" por espacios y guardo los resultados de los split en cada una de las rows del data.frame
for (i in 1:nrow(taxones)){
taxones[i,3] <- strsplit(as.character(taxones$TAXON)," ")[[i]][1]
taxones[i,4] <- strsplit(as.character(taxones$TAXON)," ")[[i]][2]
taxones[i,5] <- strsplit(as.character(taxones$TAXON)," ")[[i]][4]}
View(taxones)
taxonesG <- subset(taxones, is.na(taxones$species))
generos <- merge(taxonesG, species2000, by.x='genus', by.y='genus')
generos.unique <- generos[!duplicated(generos$genus),]
generos.unique <- generos.unique[c('genus','TAXON','COD_TAXON','kingdom','phylum','class','order','family')]
View(taxonesG)
View(taxonesG)
View(generos.unique)
# Tenemos que a??adir el campo de autoria de genero. Hemos buscado en IPNI
gen.autores <- data.frame(genus=c("Agrostis", "Bromus", "Carex", "Cerastium", "Epilobium",
"Eryngium", "Festuca", "Gagea", "Galium", "Gentiana", "Juncus",
"Luzula", "Poa", "Ranunculus", "Rumex",
"Sedum", "Spergularia", "Trifolium", "Veronica", "Viola"),
author=c('L.','L.','L.','L.','L.',
'L.','L.','Salisb.','L.','L.','L.',
'DC.','L.','L.','L.',
'L', 'L.','L.','L.'))
gen.autores <- data.frame(genus=c("Agrostis", "Bromus", "Carex", "Cerastium", "Epilobium",
"Eryngium", "Festuca", "Gagea", "Galium", "Gentiana", "Juncus",
"Luzula", "Poa", "Ranunculus", "Rumex",
"Sedum", "Trifolium", "Veronica", "Viola"),
author=c('L.','L.','L.','L.','L.',
'L.','L.','Salisb.','L.','L.','L.',
'DC.','L.','L.','L.',
'L', 'L.','L.','L.'))
generos.unique <- merge(generos.unique, gen.autores, by='genus')
View(generos.unique)
noesta <- setdiff(taxonesG$genus, generos.unique$genus)
noesta
taxonesSp <- subset(taxones, !is.na(taxones$species) & is.na(taxones$infraspecies))
species <- merge(taxonesSp, species2000, by.x=c('genus','species'), by.y=c('genus','species'))
species.unique <- species[species$infraspecies_marker=='spec.',]
species.unique <- species.unique[which(species.unique$infraspecies.y ==''),]
species.unique <- species.unique[!duplicated(species.unique$scientific_name),]
species.unique <- species.unique[species.unique$infraspecies_marker=='spec.',]
species.unique <-species.unique[!duplicated(species.unique$COD_TAXON), ]
noestaSP <- setdiff(taxonesSp$TAXON, species.unique$TAXON)
noestaSP
require(Taxonstand)
cne <- TPL(genus='Carex', species='nevadensis', infra=FALSE, corr=TRUE)
cni <- TPL(genus='Carex', species='nigra', infra=FALSE, corr=TRUE)
hb <- TPL(genus='Herniaria',species='boissieri', infra=FALSE, corr=TRUE)
sm <- TPL(genus='Scorzoneroides',species='microcephala', infra=FALSE, corr=TRUE)
sn <- TPL(genus='Scorzoneroides',species='nevadensis', infra=FALSE, corr=TRUE)
species.unique <- species.unique[c('genus','species','TAXON','COD_TAXON','scientific_name','author','kingdom','phylum','class','order','family')]
taxonesSub <- subset(taxones,  !is.na(taxones$infraspecies))
subsp <- merge(taxonesSub, species2000, by.x=c('genus','species','infraspecies'), by.y=c('genus','species','infraspecies'))
# Quedarme solo con un registro por taxon
subsp.unique <- subsp[!duplicated(subsp$TAXON),]
# ver que taxones subspecies de los taxonesBorreguiles no esta en esta lista
noestaSub <- setdiff(taxonesSub$TAXON, subsp.unique$TAXON)
noestaSub
View(subsp.unique)
subsp.unique <- subsp.unique[c('genus','species','infraspecies','TAXON','COD_TAXON','scientific_name','author','kingdom','phylum','class','order','family')]
# UNIR TABLA SUBSP Y SP
# OJO FALTAN LAS EXCEPCIONES
taxSpSubsp <- merge(species.unique,subsp.unique, all=T)
### UNIR TABLAS GENERO Y SPECIES
union <- merge(generos.unique, taxSpSubsp, all=T)
union <- union[c('scientific_name','kingdom','phylum','class','order','family','genus','species','infraspecies','author','TAXON','COD_TAXON')]
## Completar el nombre scientific_name
union$scientific_name <- ifelse(is.na(union$species),
paste(union$genus,union$author, sep=' '),
paste(union$scientific_name))
View(union)
59+9+19
cneC <- data.frame(scientific_name=paste(paste(cne$Genus,cne$Species, sp=''), cne$Authority, sep=''),
kingdom='Plantae',
phylum='Magnoliophyta',
class='Liliopsida',
order='Poales',
family=cne$Family, genus=cne$Genus, species=cne$Species,
infraspecies=NA, author=cne$Authority,
TAXON=noestaSP[1],
COD_TAXON=taxones[taxones$TAXON=='Carex nevadensis',]$COD_TAXON)
cniC <- data.frame(scientific_name=paste(paste(cni$Genus,cni$Species, sp=''), cni$Authority, sep=''),
kingdom='Plantae',
phylum='Magnoliophyta',
class='Liliopsida',
order='Poales',
family=cni$Family, genus=cni$Genus, species=cni$Species,
infraspecies=NA, author=cni$Authority,
TAXON=noestaSP[2],
COD_TAXON=taxones[taxones$TAXON=='Carex nigra',]$COD_TAXON)
hbC <- data.frame(scientific_name=paste(paste(hb$Genus,hb$Species, sp=''), hb$Authority, sep=''),
kingdom='Plantae',
phylum='Magnoliophyta',
class='Magnoliopsida',
order='Caryophyllales',
family=hb$Family, genus=hb$Genus, species=hb$Species,
infraspecies=NA, author=hb$Authority,
TAXON=noestaSP[3],
COD_TAXON=taxones[taxones$TAXON=='Herniaria boissieri',]$COD_TAXON
smC <- data.frame(scientific_name=paste(paste(sm$Genus,sm$Species, sp=''), sm$Authority, sep=''),
kingdom='Plantae',
phylum='Magnoliophyta',
class='Magnoliopsida',
order='Asterales',
family='Asteraceae', genus=sm$Genus, species=sm$Species,
infraspecies=NA, author=sm$Authority,
TAXON=noestaSP[4],
COD_TAXON=taxones[taxones$TAXON=='Scorzoneroides microcephala',]$COD_TAXON)
snC <- data.frame(scientific_name=paste(paste(sn$Genus,sn$Species, sp=''), sn$Authority, sep=''),
kingdom='Plantae',
phylum='Magnoliophyta',
class='Magnoliopsida',
order='Asterales',
family='Asteraceae', genus=sn$Genus, species=sn$Species,
infraspecies=NA, author=sn$Authority,
TAXON=noestaSP[5],
COD_TAXON=taxones[taxones$TAXON=='Scorzoneroides nevadensis',]$COD_TAXON)
sp.excep <- rbind(cneC,cniC,hbC,smC,snC)
cneC <- data.frame(scientific_name=paste(paste(cne$Genus,cne$Species, sp=''), cne$Authority, sep=''),
kingdom='Plantae',
phylum='Magnoliophyta',
class='Liliopsida',
order='Poales',
family=cne$Family, genus=cne$Genus, species=cne$Species,
infraspecies=NA, author=cne$Authority,
TAXON=noestaSP[1],
COD_TAXON=taxones[taxones$TAXON=='Carex nevadensis',]$COD_TAXON)
cniC <- data.frame(scientific_name=paste(paste(cni$Genus,cni$Species, sp=''), cni$Authority, sep=''),
kingdom='Plantae',
phylum='Magnoliophyta',
class='Liliopsida',
order='Poales',
family=cni$Family, genus=cni$Genus, species=cni$Species,
infraspecies=NA, author=cni$Authority,
TAXON=noestaSP[2],
COD_TAXON=taxones[taxones$TAXON=='Carex nigra',]$COD_TAXON)
hbC <- data.frame(scientific_name=paste(paste(hb$Genus,hb$Species, sp=''), hb$Authority, sep=''),
kingdom='Plantae',
phylum='Magnoliophyta',
class='Magnoliopsida',
order='Caryophyllales',
family=hb$Family, genus=hb$Genus, species=hb$Species,
infraspecies=NA, author=hb$Authority,
TAXON=noestaSP[3],
COD_TAXON=taxones[taxones$TAXON=='Herniaria boissieri',]$COD_TAXON)
smC <- data.frame(scientific_name=paste(paste(sm$Genus,sm$Species, sp=''), sm$Authority, sep=''),
kingdom='Plantae',
phylum='Magnoliophyta',
class='Magnoliopsida',
order='Asterales',
family='Asteraceae', genus=sm$Genus, species=sm$Species,
infraspecies=NA, author=sm$Authority,
TAXON=noestaSP[4],
COD_TAXON=taxones[taxones$TAXON=='Scorzoneroides microcephala',]$COD_TAXON)
snC <- data.frame(scientific_name=paste(paste(sn$Genus,sn$Species, sp=''), sn$Authority, sep=''),
kingdom='Plantae',
phylum='Magnoliophyta',
class='Magnoliopsida',
order='Asterales',
family='Asteraceae', genus=sn$Genus, species=sn$Species,
infraspecies=NA, author=sn$Authority,
TAXON=noestaSP[5],
COD_TAXON=taxones[taxones$TAXON=='Scorzoneroides nevadensis',]$COD_TAXON)
sp.excep <- rbind(cneC,cniC,hbC,smC,snC)
borag <- data.frame(scientific_name='Boraginaceae Juss.',
kingdom='Plantae',
phylum='Magnoliophyta',
class='Magnoliopsida',
order='Boraginales',
family='Boraginaceae', genus=NA, species=NA,
infraspecies=NA, author='Juss.',
TAXON='Boraginaceae',
COD_TAXON=taxones[taxones$TAXON=='Boraginaceae',]$COD_TAXON)
poaceae <- data.frame(scientific_name='Poaceae Barnhart',
kingdom='Plantae',
phylum='Magnoliophyta',
class='Liliopsida',
order='Poales',
family='Poaceae', genus=NA, species=NA,
infraspecies=NA, author='Barnhart',
TAXON='Poaceae',
COD_TAXON=taxones[taxones$TAXON=='Poaceae',]$COD_TAXON)
excepciones <- rbind(sp.excep, borag, poaceae)
## Ahora uno las excepciones a los taxones
tax <- rbind(union, excepciones)
write.table(tax, file=paste(di,"2_diccionarios/TAXONES_GBIF2014_completos.txt", sep=""), sep=";", row.names=FALSE)
write.table(tax, file=paste(di,"/2_diccionarios/TAXONES_GBIF2014_completos.txt", sep=""), sep=";", row.names=FALSE)
setwd('/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP/3_scripts/r/')
library('rmarkdown')
library('knitr')
setwd('/Users/ajpelu/Dropbox/MS/MS_DP_Borreguiles/git/BorreguilesDP/3_scripts/r/')
rmarkdown::render('gbif_borreguiles_002_taxonomia.Rmd', 'all')
rmarkdown::render('gbif_borreguiles_002_taxonomia.Rmd', 'all')
rmarkdown::render('gbif_borreguiles_002_taxonomia.Rmd', 'all')
rmarkdown::render('gbif_borreguiles_002_taxonomia.Rmd', 'all')
rmarkdown::render('gbif_borreguiles_002_taxonomia.Rmd', 'all')
rmarkdown::render('gbif_borreguiles_002_taxonomia.Rmd', 'md')
